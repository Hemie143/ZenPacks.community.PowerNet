name: ZenPacks.community.PowerNet

class_relationships:
  - PowerNetDevice 1:MC PowerNetInput
  - PowerNetDevice 1:MC PowerNetOutput
  - PowerNetInput 1:MC PowerNetInputPhase
  - PowerNetOutput 1:MC PowerNetOutputPhase

classes:
  PowerNetDevice:
    base: [zenpacklib.Device]
    label: PowerNet UPS Device
    monitoring_templates: [SnmpPowerNet]
    properties:
      model:
        type: string
        label: Model
      numBatteryPacks:
        type: string
        label: Number of battery packs
      numBadBatteryPacks:
        type: string
        label: Number of bad battery packs
      basicOutputStatus:
        type: string
        label: Output status

  PowerNetInput:
    base: [zenpacklib.Component]
    label: Input
    monitoring_templates: [PowerNetInput]
    properties:
      index:
        label: Index
      numPhases:
        label: Phases
      orientation:
        label: Voltage orientation
      inputType:
        label: Input type

  PowerNetInputPhase:
    base: [zenpacklib.Component]
    label: Input Phase
    monitoring_templates: [PowerNetInputPhase]
    properties:
      inputIndex:
        label: Input Index
      index:
        label: Index

  PowerNetOutput:
    base: [zenpacklib.Component]
    label: Output
    monitoring_templates: [PowerNetOutput]
    properties:
      index:
        label: Index
      numPhases:
        label: Phases
      orientation:
        label: Voltage orientation

  PowerNetOutputPhase:
    base: [zenpacklib.Component]
    label: Input Pahse
    monitoring_templates: [PowerNetOutputPhase]
    properties:
      outputIndex:
        label: Output Index
      index:
        label: Index

device_classes:
  /Power/UPS/PowerNet:
    zProperties:
      zPythonClass: ZenPacks.community.PowerNet.PowerNetDevice
      zSnmpMonitorIgnore: false
      zCollectorPlugins:
        - zenoss.snmp.NewDeviceMap
        - zenoss.snmp.DeviceMap
        - zenoss.snmp.SnmpV3EngineIdMap
        - zenoss.snmp.InterfaceMap
        - community.snmp.PowerNetDevice
        - community.snmp.PowerNetInput
        - community.snmp.PowerNetOutput
      zDeviceTemplates:
        - Device

    templates:
      SnmpPowerNet:
        targetPythonClass: ZenPacks.community.PowerNet.PowerNetDevice
        datasources:
          ups:
            type: Python
            plugin_classname: ZenPacks.community.PowerNet.dsplugins.SnmpPowerNet.SnmpPowerNetDev
            datapoints:
                batteryStatus:
                  rrdtype: GAUGE
                batteryCapacity:
                  rrdtype: GAUGE
                batteryRunTimeRemaining:
                  rrdtype: GAUGE
                upsOutputLoad:
                  rrdtype: GAUGE
                upsAdvBatteryNominalVoltage:
                  rrdtype: GAUGE
                upsAdvBatteryActualVoltage:
                  rrdtype: GAUGE
                upsAdvBatteryCurrent:
                  rrdtype: GAUGE
                upsAdvBatteryTemperature:
                  rrdtype: GAUGE
        graphs:
          UPS Capacity:
            height: 100
            width: 1000
            miny: 0
            maxy: 100
            units: percent
            graphpoints:
              Battery Capacity:
                dpName: ups_batteryCapacity
              Output Load:
                dpName: ups_upsOutputLoad
          Battery Temperature:
            height: 100
            width: 1000
            units:  "\xB0C"
            graphpoints:
              Status:
                dpName: ups_upsAdvBatteryTemperature
          Battery Status:
            height: 100
            width: 1000
            miny: 1
            maxy: 4
            units: 1=unknown, 2=normal, 3=low, 4=fault
            graphpoints:
              Status:
                dpName: ups_batteryStatus
          Battery RunTime remaining:
            height: 100
            width: 1000
            units: minutes
            graphpoints:
              RunTimeRemaining:
                dpName: ups_batteryRunTimeRemaining
          Battery Voltage:
            height: 100
            width: 1000
            units: Volts
            graphpoints:
              Nominal voltage:
                dpName: ups_upsAdvBatteryNominalVoltage
              Actual voltage:
                dpName: ups_upsAdvBatteryActualVoltage
          Battery Current:
            height: 100
            width: 1000
            units: Amps
            graphpoints:
              Current:
                dpName: ups_upsAdvBatteryCurrent

      PowerNetInput:
        targetPythonClass: ZenPacks.community.PowerNet.PowerNetInput
        datasources:
          input:
            type: Python
            plugin_classname: ZenPacks.community.PowerNet.dsplugins.PowerNetInput.PowerNetInput
            datapoints:
              frequency:
                rrdtype: GAUGE

      PowerNetInputPhase:
        targetPythonClass: ZenPacks.community.PowerNet.PowerNetInputPhase
        datasources:
          input:
            type: Python
            plugin_classname: ZenPacks.community.PowerNet.dsplugins.PowerNetInput.PowerNetInputPhase
            datapoints:
              voltage:
                rrdtype: GAUGE
              current:
                rrdtype: GAUGE

      PowerNetOutput:
        targetPythonClass: ZenPacks.community.PowerNet.PowerNetOutput
        datasources:
          output:
            type: Python
            plugin_classname: ZenPacks.community.PowerNet.dsplugins.PowerNetOutput.PowerNetOutput
            datapoints:
              frequency:
                rrdtype: GAUGE

      PowerNetOutputPhase:
        targetPythonClass: ZenPacks.community.PowerNet.PowerNetOutputPhase
        datasources:
          input:
            type: Python
            plugin_classname: ZenPacks.community.PowerNet.dsplugins.PowerNetOutput.PowerNetOutputPhase
            datapoints:
              voltage:
                rrdtype: GAUGE
              current:
                rrdtype: GAUGE
              load:
                rrdtype: GAUGE
              loadPercent:
                rrdtype: GAUGE
              power:
                rrdtype: GAUGE

